 # 278. First Bad Version
 
class Solution:
    def firstBadVersion(self, n: int) -> int:
        left, right = 0 ,n
        while left <= right:
            mid = left + (right - left) // 2
            if not isBadVersion(mid):
                left = mid + 1
            else:
                right = mid - 1
        return left
        
        
# 35. Search Insert Position

class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        l,r=0,len(nums)
        while l<r:
            mid=(l+r)//2
            if nums[mid]>=target:
                r=mid
            else:
                l=mid+1
        return l
