# 1. Two Sum
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        dic = {}
        for i, n in enumerate(nums):
            if target - n in dic:
                return [dic[target - n], i]
            dic[n] = i

# 88. Merge Sorted Array
class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        i, j, k = m - 1, n - 1, m + n - 1
        while i >= 0 and j >= 0:
            if nums1[i] > nums2[j]:
                nums1[k] = nums1[i]
                i, k = i - 1, k - 1
            else:
                nums1[k] = nums2[j]
                j, k = j - 1, k - 1
        while j >= 0:
            nums1[k] = nums2[j]
            j, k = j - 1, k - 1

#350. Intersection of Two Arrays II
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        d1={}
        d2={}
        '''for x in nums1:
            d1[x]=0
        for y in nums2:
            d2[y]=0
        for x in nums1:
            d1[x]+=1
        for y in nums2:
            d2[y]+=1
        '''
        d1,d2=collections.Counter(nums1),collections.Counter(nums2)
        r=[] 
        keys=set(d1.keys()).intersection(set(d2.keys()))
        for i in keys:
            r+=([i]*min(d1[i],d2[i]))
        return r
